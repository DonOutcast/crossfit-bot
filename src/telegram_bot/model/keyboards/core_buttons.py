from typing import List
from aiogram.types.keyboard_button import KeyboardButton
from aiogram.types.reply_keyboard_markup import ReplyKeyboardMarkup



menu_buttons = [
    [KeyboardButton(text="–ü–æ–≥–æ–¥–∞ üå§Ô∏è"), KeyboardButton(text="–í–∞–ª—é—Ç–∞ üí∞")],
    [KeyboardButton(text="–ú–∏–ª–æ—Ç–∞ üê±"), KeyboardButton(text="–û–ø—Ä–æ—Å üìù")],
    
]

menu_keyboard = ReplyKeyboardMarkup(
    keyboard=menu_buttons, resize_keyboard=True,)


def generate_keyboard(buttons: List[List[str]], resize_keyboard=True, request_location=False) -> ReplyKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç ReplyKeyboardMarkup —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.

    :param buttons: —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Å—Ç—Ä–æ–∫, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏—Ö —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫
    :param resize_keyboard: –ø–∞—Ä–∞–º–µ—Ç—Ä, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –∏–∑–º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–Ω–æ–ø–æ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é True)
    :param request_location: –ø–∞—Ä–∞–º–µ—Ç—Ä, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é False)
    :return: –æ–±—ä–µ–∫—Ç ReplyKeyboardMarkup
    :raises ValueError: –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä buttons –ø—É—Å—Ç –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—É—Å—Ç—ã–µ —Å–ø–∏—Å–∫–∏
    """
    if not buttons or any(not row for row in buttons):
        raise ValueError("buttons parameter cannot be empty or contain empty lists")

    keyboard = []
    for button_row in buttons:
        row = []
        for button_text in button_row:
            if request_location and 'location' in button_text.lower():
                row.append(KeyboardButton(text=button_text.split()[0], request_location=True))
            else:
                row.append(KeyboardButton(text=button_text))
        keyboard.append(row)
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=resize_keyboard)

# [
#     KeyboardButton(text='–õ–æ–∫–∞—Ü–∏—è', request_location=True),
# ],
